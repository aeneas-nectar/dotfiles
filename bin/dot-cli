#!/bin/bash

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1
PROFILE=$2


ARROW="￫"
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m'

export DOTFILES_DIR EXTRA_DIR
DOTFILES_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

escape() {
  message=$1
  echo "${message}"
}

answer_is_yes() {
  [[ "$REPLY" =~ ^[Yy]$ ]] \
    && return 0 \
    || return 1
}

print_question() {
  # Print output in yellow
  printf "\e[0;33m  [?] $1\e[0m"
}

print_error() {
  # Print output in red
  printf "\e[0;31m  [✖] $1 $2\e[0m\n"
}

print_success() {
  # Print output in green
  printf "\e[0;32m  [✔] $1\e[0m\n"
}

ask_for_confirmation() {
  print_question "$1 (y/n) "
  read -n 1
  printf "\n"
}
change_directory() {
  cd $1
}

sub_help() {
  echo -e "${ARROW} Usage: ${YELLO}${BIN_NAME} <command>${NC}"
  echo
  echo "Commands:"
  echo "    help          This help message"
  echo "    install       This is a full install of all relevant config"
  echo "    clean         Clean up caches (brew, npm)"
  echo "    symlinks      Run symlinks script"
  echo "    apps          Run os-specific application installation"
  echo "    os            Run os-specific defaults script"
  echo "    npm           Run npm global dependencies script"
}

sub_clean() {
  source "${DOTFILES_DIR}/dotfiles/"
  brew cleanup
  npm cache clean --force
  echo -e "${GREEN}$ARROW Success! Clean command finished.${NC}"
}

sub_install() {
  source "${DOTFILES_DIR}/install/install.sh"
  echo -e "${GREEN}$ARROW Success! Install command finished.${NC}"
}

sub_symlinks() {
  source "${DOTFILES_DIR}/profiles/${PROFILE}/symlinks.sh"
  echo -e "${GREEN}$ARROW Success! Symlinks command finished.${NC}"
}

sub_os() {
  source "${DOTFILES_DIR}/profiles/${PROFILE}/os.sh"
  echo -e "${GREEN}$ARROW Success! OS command finished.${NC}"
}

sub_apps() {
    source "${DOTFILES_DIR}/profiles/${PROFILE}/apps.sh"
    echo -e "${GREEN}$ARROW Success! Apps command finished.${NC}"
}

sub_npm() {
  source "${DOTFILES_DIR}/install/npm.sh"
  echo -e "${GREEN}$ARROW Success! npm global dependencies command finished.${NC}"

}


## Run the given command
case ${COMMAND_NAME} in
  "" | "-h" | "--help")
    sub_help
    ;;
  *)
    shift
    sub_${COMMAND_NAME} $@
    if [ $? = 127 ]; then
      echo -e "${RED}$ARROW Error: '${COMMAND_NAME}' is not a known command or has errors.${NC}" >&2
      sub_help
      exit 1
    fi
    ;;
esac
